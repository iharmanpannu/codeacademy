{"dependencies":[],"generated":{"js":"class School {\n  constructor(name, level, numberOfStudents) {\n    this._name = name;\n    this._level = level;\n    this._numberOfStudents = numberOfStudents;\n  }\n  get name() {\n    return this._name;\n  }\n  get level() {\n    return this._level;\n  }\n  get numberOfStudents() {\n    return this._numberOfStudents;\n  }\n\n  set numberOfStudents(newNumberOfStudents) {\n    if (typeof newNumberOfStudents === \"String\") {\n      this._numberOfStudents = this.newNumberOfStudents;\n    } else {\n      console.log(\"Invalid input: numberOfStudents must be set to a Number.\");\n    }\n  }\n\n  quickFacts() {\n    console.log(\n      `${name} educates ${numberOfStudents} students, typically between the ages of ${level}.`\n    );\n  }\n\n  static pickSubstituteTeachers(substituteTeachers) {\n    substituteTeachers = [\n      Math.floor(substituteTeachers.length * Math.random())\n    ];\n  }\n}\n\nclass PrimarySchool extends School {\n  constructor(name, numberOfStudents, pickupPolicy) {\n    super(name, primary, numberOfStudents);\n    this._pickupPolicy = pickupPolicy;\n  }\n\n  get pickupPolicy() {\n    return this._pickupPolicy;\n  }\n}\n\nclass HighSchool extends School {\n  constructor(name, numberOfStudents, sportsTeams) {\n    super(name, high, numberOfStudents);\n    this._sportsTeams = sportsTeams;\n  }\n\n  get sportsTeams() {\n    return this._sportsTeams;\n    console.log(sportsTeams);\n  }\n}\n\nconst lorraineHansbury = new PrimarySchool(\"Lorraine Hansbury\", 514, \n'Students must be picked up by a parent, guardian, or a family member over the age of 13.');\n\nlorraineHansbury.quickFacts();\nSchool.pickSubstituteTeachers(['Jamal Crawford', 'Lou Williams', 'J. R. Smith', 'James Harden', 'Jason Terry', 'Manu Ginobli']);\n\nconst alSmith = new HighSchool(\"Al E. Smith\", 451, ['Baseball', 'Basketball', 'Volleyball', 'Track and Field']);"},"hash":"be719e23fdac611e5bba769322eeeca7"}